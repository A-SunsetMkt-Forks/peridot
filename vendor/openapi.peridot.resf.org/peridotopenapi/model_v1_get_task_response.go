/*
 * peridot/proto/v1/batch.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package peridotopenapi

import (
	"encoding/json"
)

// V1GetTaskResponse struct for V1GetTaskResponse
type V1GetTaskResponse struct {
	Task *V1AsyncTask `json:"task,omitempty"`
}

// NewV1GetTaskResponse instantiates a new V1GetTaskResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GetTaskResponse() *V1GetTaskResponse {
	this := V1GetTaskResponse{}
	return &this
}

// NewV1GetTaskResponseWithDefaults instantiates a new V1GetTaskResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GetTaskResponseWithDefaults() *V1GetTaskResponse {
	this := V1GetTaskResponse{}
	return &this
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *V1GetTaskResponse) GetTask() V1AsyncTask {
	if o == nil || o.Task == nil {
		var ret V1AsyncTask
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GetTaskResponse) GetTaskOk() (*V1AsyncTask, bool) {
	if o == nil || o.Task == nil {
		return nil, false
	}
	return o.Task, true
}

// HasTask returns a boolean if a field has been set.
func (o *V1GetTaskResponse) HasTask() bool {
	if o != nil && o.Task != nil {
		return true
	}

	return false
}

// SetTask gets a reference to the given V1AsyncTask and assigns it to the Task field.
func (o *V1GetTaskResponse) SetTask(v V1AsyncTask) {
	o.Task = &v
}

func (o V1GetTaskResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Task != nil {
		toSerialize["task"] = o.Task
	}
	return json.Marshal(toSerialize)
}

type NullableV1GetTaskResponse struct {
	value *V1GetTaskResponse
	isSet bool
}

func (v NullableV1GetTaskResponse) Get() *V1GetTaskResponse {
	return v.value
}

func (v *NullableV1GetTaskResponse) Set(val *V1GetTaskResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GetTaskResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GetTaskResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GetTaskResponse(val *V1GetTaskResponse) *NullableV1GetTaskResponse {
	return &NullableV1GetTaskResponse{value: val, isSet: true}
}

func (v NullableV1GetTaskResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GetTaskResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



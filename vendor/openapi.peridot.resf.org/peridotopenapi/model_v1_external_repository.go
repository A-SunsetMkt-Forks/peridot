/*
 * peridot/proto/v1/batch.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package peridotopenapi

import (
	"encoding/json"
)

// V1ExternalRepository struct for V1ExternalRepository
type V1ExternalRepository struct {
	Url *string `json:"url,omitempty"`
	Priority *int32 `json:"priority,omitempty"`
	ModuleHotfixes *bool `json:"moduleHotfixes,omitempty"`
}

// NewV1ExternalRepository instantiates a new V1ExternalRepository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ExternalRepository() *V1ExternalRepository {
	this := V1ExternalRepository{}
	return &this
}

// NewV1ExternalRepositoryWithDefaults instantiates a new V1ExternalRepository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ExternalRepositoryWithDefaults() *V1ExternalRepository {
	this := V1ExternalRepository{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *V1ExternalRepository) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExternalRepository) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *V1ExternalRepository) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *V1ExternalRepository) SetUrl(v string) {
	o.Url = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *V1ExternalRepository) GetPriority() int32 {
	if o == nil || o.Priority == nil {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExternalRepository) GetPriorityOk() (*int32, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *V1ExternalRepository) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *V1ExternalRepository) SetPriority(v int32) {
	o.Priority = &v
}

// GetModuleHotfixes returns the ModuleHotfixes field value if set, zero value otherwise.
func (o *V1ExternalRepository) GetModuleHotfixes() bool {
	if o == nil || o.ModuleHotfixes == nil {
		var ret bool
		return ret
	}
	return *o.ModuleHotfixes
}

// GetModuleHotfixesOk returns a tuple with the ModuleHotfixes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExternalRepository) GetModuleHotfixesOk() (*bool, bool) {
	if o == nil || o.ModuleHotfixes == nil {
		return nil, false
	}
	return o.ModuleHotfixes, true
}

// HasModuleHotfixes returns a boolean if a field has been set.
func (o *V1ExternalRepository) HasModuleHotfixes() bool {
	if o != nil && o.ModuleHotfixes != nil {
		return true
	}

	return false
}

// SetModuleHotfixes gets a reference to the given bool and assigns it to the ModuleHotfixes field.
func (o *V1ExternalRepository) SetModuleHotfixes(v bool) {
	o.ModuleHotfixes = &v
}

func (o V1ExternalRepository) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.ModuleHotfixes != nil {
		toSerialize["moduleHotfixes"] = o.ModuleHotfixes
	}
	return json.Marshal(toSerialize)
}

type NullableV1ExternalRepository struct {
	value *V1ExternalRepository
	isSet bool
}

func (v NullableV1ExternalRepository) Get() *V1ExternalRepository {
	return v.value
}

func (v *NullableV1ExternalRepository) Set(val *V1ExternalRepository) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ExternalRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ExternalRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ExternalRepository(val *V1ExternalRepository) *NullableV1ExternalRepository {
	return &NullableV1ExternalRepository{value: val, isSet: true}
}

func (v NullableV1ExternalRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ExternalRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



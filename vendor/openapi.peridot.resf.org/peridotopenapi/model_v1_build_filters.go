/*
 * peridot/proto/v1/batch.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package peridotopenapi

import (
	"encoding/json"
)

// V1BuildFilters struct for V1BuildFilters
type V1BuildFilters struct {
	Status *V1TaskStatus `json:"status,omitempty"`
	PackageName *string `json:"packageName,omitempty"`
}

// NewV1BuildFilters instantiates a new V1BuildFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BuildFilters() *V1BuildFilters {
	this := V1BuildFilters{}
	var status V1TaskStatus = UNSPECIFIED
	this.Status = &status
	return &this
}

// NewV1BuildFiltersWithDefaults instantiates a new V1BuildFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BuildFiltersWithDefaults() *V1BuildFilters {
	this := V1BuildFilters{}
	var status V1TaskStatus = UNSPECIFIED
	this.Status = &status
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1BuildFilters) GetStatus() V1TaskStatus {
	if o == nil || o.Status == nil {
		var ret V1TaskStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BuildFilters) GetStatusOk() (*V1TaskStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1BuildFilters) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given V1TaskStatus and assigns it to the Status field.
func (o *V1BuildFilters) SetStatus(v V1TaskStatus) {
	o.Status = &v
}

// GetPackageName returns the PackageName field value if set, zero value otherwise.
func (o *V1BuildFilters) GetPackageName() string {
	if o == nil || o.PackageName == nil {
		var ret string
		return ret
	}
	return *o.PackageName
}

// GetPackageNameOk returns a tuple with the PackageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BuildFilters) GetPackageNameOk() (*string, bool) {
	if o == nil || o.PackageName == nil {
		return nil, false
	}
	return o.PackageName, true
}

// HasPackageName returns a boolean if a field has been set.
func (o *V1BuildFilters) HasPackageName() bool {
	if o != nil && o.PackageName != nil {
		return true
	}

	return false
}

// SetPackageName gets a reference to the given string and assigns it to the PackageName field.
func (o *V1BuildFilters) SetPackageName(v string) {
	o.PackageName = &v
}

func (o V1BuildFilters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.PackageName != nil {
		toSerialize["packageName"] = o.PackageName
	}
	return json.Marshal(toSerialize)
}

type NullableV1BuildFilters struct {
	value *V1BuildFilters
	isSet bool
}

func (v NullableV1BuildFilters) Get() *V1BuildFilters {
	return v.value
}

func (v *NullableV1BuildFilters) Set(val *V1BuildFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BuildFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BuildFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BuildFilters(val *V1BuildFilters) *NullableV1BuildFilters {
	return &NullableV1BuildFilters{value: val, isSet: true}
}

func (v NullableV1BuildFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BuildFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



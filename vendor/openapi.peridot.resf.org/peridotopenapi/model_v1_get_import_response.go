/*
 * peridot/proto/v1/batch.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package peridotopenapi

import (
	"encoding/json"
)

// V1GetImportResponse struct for V1GetImportResponse
type V1GetImportResponse struct {
	Import *V1Import `json:"import,omitempty"`
}

// NewV1GetImportResponse instantiates a new V1GetImportResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GetImportResponse() *V1GetImportResponse {
	this := V1GetImportResponse{}
	return &this
}

// NewV1GetImportResponseWithDefaults instantiates a new V1GetImportResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GetImportResponseWithDefaults() *V1GetImportResponse {
	this := V1GetImportResponse{}
	return &this
}

// GetImport returns the Import field value if set, zero value otherwise.
func (o *V1GetImportResponse) GetImport() V1Import {
	if o == nil || o.Import == nil {
		var ret V1Import
		return ret
	}
	return *o.Import
}

// GetImportOk returns a tuple with the Import field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GetImportResponse) GetImportOk() (*V1Import, bool) {
	if o == nil || o.Import == nil {
		return nil, false
	}
	return o.Import, true
}

// HasImport returns a boolean if a field has been set.
func (o *V1GetImportResponse) HasImport() bool {
	if o != nil && o.Import != nil {
		return true
	}

	return false
}

// SetImport gets a reference to the given V1Import and assigns it to the Import field.
func (o *V1GetImportResponse) SetImport(v V1Import) {
	o.Import = &v
}

func (o V1GetImportResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Import != nil {
		toSerialize["import"] = o.Import
	}
	return json.Marshal(toSerialize)
}

type NullableV1GetImportResponse struct {
	value *V1GetImportResponse
	isSet bool
}

func (v NullableV1GetImportResponse) Get() *V1GetImportResponse {
	return v.value
}

func (v *NullableV1GetImportResponse) Set(val *V1GetImportResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GetImportResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GetImportResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GetImportResponse(val *V1GetImportResponse) *NullableV1GetImportResponse {
	return &NullableV1GetImportResponse{value: val, isSet: true}
}

func (v NullableV1GetImportResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GetImportResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



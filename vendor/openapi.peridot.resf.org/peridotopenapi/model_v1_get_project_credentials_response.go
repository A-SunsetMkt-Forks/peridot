/*
 * peridot/proto/v1/batch.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package peridotopenapi

import (
	"encoding/json"
)

// V1GetProjectCredentialsResponse struct for V1GetProjectCredentialsResponse
type V1GetProjectCredentialsResponse struct {
	GitlabUsername *string `json:"gitlabUsername,omitempty"`
}

// NewV1GetProjectCredentialsResponse instantiates a new V1GetProjectCredentialsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GetProjectCredentialsResponse() *V1GetProjectCredentialsResponse {
	this := V1GetProjectCredentialsResponse{}
	return &this
}

// NewV1GetProjectCredentialsResponseWithDefaults instantiates a new V1GetProjectCredentialsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GetProjectCredentialsResponseWithDefaults() *V1GetProjectCredentialsResponse {
	this := V1GetProjectCredentialsResponse{}
	return &this
}

// GetGitlabUsername returns the GitlabUsername field value if set, zero value otherwise.
func (o *V1GetProjectCredentialsResponse) GetGitlabUsername() string {
	if o == nil || o.GitlabUsername == nil {
		var ret string
		return ret
	}
	return *o.GitlabUsername
}

// GetGitlabUsernameOk returns a tuple with the GitlabUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GetProjectCredentialsResponse) GetGitlabUsernameOk() (*string, bool) {
	if o == nil || o.GitlabUsername == nil {
		return nil, false
	}
	return o.GitlabUsername, true
}

// HasGitlabUsername returns a boolean if a field has been set.
func (o *V1GetProjectCredentialsResponse) HasGitlabUsername() bool {
	if o != nil && o.GitlabUsername != nil {
		return true
	}

	return false
}

// SetGitlabUsername gets a reference to the given string and assigns it to the GitlabUsername field.
func (o *V1GetProjectCredentialsResponse) SetGitlabUsername(v string) {
	o.GitlabUsername = &v
}

func (o V1GetProjectCredentialsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GitlabUsername != nil {
		toSerialize["gitlabUsername"] = o.GitlabUsername
	}
	return json.Marshal(toSerialize)
}

type NullableV1GetProjectCredentialsResponse struct {
	value *V1GetProjectCredentialsResponse
	isSet bool
}

func (v NullableV1GetProjectCredentialsResponse) Get() *V1GetProjectCredentialsResponse {
	return v.value
}

func (v *NullableV1GetProjectCredentialsResponse) Set(val *V1GetProjectCredentialsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GetProjectCredentialsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GetProjectCredentialsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GetProjectCredentialsResponse(val *V1GetProjectCredentialsResponse) *NullableV1GetProjectCredentialsResponse {
	return &NullableV1GetProjectCredentialsResponse{value: val, isSet: true}
}

func (v NullableV1GetProjectCredentialsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GetProjectCredentialsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * peridot/proto/v1/batch.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package peridotopenapi

import (
	"encoding/json"
)

// V1ImportPackageBatchResponse struct for V1ImportPackageBatchResponse
type V1ImportPackageBatchResponse struct {
	ImportBatchId *string `json:"importBatchId,omitempty"`
}

// NewV1ImportPackageBatchResponse instantiates a new V1ImportPackageBatchResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ImportPackageBatchResponse() *V1ImportPackageBatchResponse {
	this := V1ImportPackageBatchResponse{}
	return &this
}

// NewV1ImportPackageBatchResponseWithDefaults instantiates a new V1ImportPackageBatchResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ImportPackageBatchResponseWithDefaults() *V1ImportPackageBatchResponse {
	this := V1ImportPackageBatchResponse{}
	return &this
}

// GetImportBatchId returns the ImportBatchId field value if set, zero value otherwise.
func (o *V1ImportPackageBatchResponse) GetImportBatchId() string {
	if o == nil || o.ImportBatchId == nil {
		var ret string
		return ret
	}
	return *o.ImportBatchId
}

// GetImportBatchIdOk returns a tuple with the ImportBatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ImportPackageBatchResponse) GetImportBatchIdOk() (*string, bool) {
	if o == nil || o.ImportBatchId == nil {
		return nil, false
	}
	return o.ImportBatchId, true
}

// HasImportBatchId returns a boolean if a field has been set.
func (o *V1ImportPackageBatchResponse) HasImportBatchId() bool {
	if o != nil && o.ImportBatchId != nil {
		return true
	}

	return false
}

// SetImportBatchId gets a reference to the given string and assigns it to the ImportBatchId field.
func (o *V1ImportPackageBatchResponse) SetImportBatchId(v string) {
	o.ImportBatchId = &v
}

func (o V1ImportPackageBatchResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ImportBatchId != nil {
		toSerialize["importBatchId"] = o.ImportBatchId
	}
	return json.Marshal(toSerialize)
}

type NullableV1ImportPackageBatchResponse struct {
	value *V1ImportPackageBatchResponse
	isSet bool
}

func (v NullableV1ImportPackageBatchResponse) Get() *V1ImportPackageBatchResponse {
	return v.value
}

func (v *NullableV1ImportPackageBatchResponse) Set(val *V1ImportPackageBatchResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ImportPackageBatchResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ImportPackageBatchResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ImportPackageBatchResponse(val *V1ImportPackageBatchResponse) *NullableV1ImportPackageBatchResponse {
	return &NullableV1ImportPackageBatchResponse{value: val, isSet: true}
}

func (v NullableV1ImportPackageBatchResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ImportPackageBatchResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



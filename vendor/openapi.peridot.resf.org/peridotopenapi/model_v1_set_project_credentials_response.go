/*
 * peridot/proto/v1/batch.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package peridotopenapi

import (
	"encoding/json"
)

// V1SetProjectCredentialsResponse struct for V1SetProjectCredentialsResponse
type V1SetProjectCredentialsResponse struct {
	GitlabUsername *string `json:"gitlabUsername,omitempty"`
}

// NewV1SetProjectCredentialsResponse instantiates a new V1SetProjectCredentialsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SetProjectCredentialsResponse() *V1SetProjectCredentialsResponse {
	this := V1SetProjectCredentialsResponse{}
	return &this
}

// NewV1SetProjectCredentialsResponseWithDefaults instantiates a new V1SetProjectCredentialsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SetProjectCredentialsResponseWithDefaults() *V1SetProjectCredentialsResponse {
	this := V1SetProjectCredentialsResponse{}
	return &this
}

// GetGitlabUsername returns the GitlabUsername field value if set, zero value otherwise.
func (o *V1SetProjectCredentialsResponse) GetGitlabUsername() string {
	if o == nil || o.GitlabUsername == nil {
		var ret string
		return ret
	}
	return *o.GitlabUsername
}

// GetGitlabUsernameOk returns a tuple with the GitlabUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SetProjectCredentialsResponse) GetGitlabUsernameOk() (*string, bool) {
	if o == nil || o.GitlabUsername == nil {
		return nil, false
	}
	return o.GitlabUsername, true
}

// HasGitlabUsername returns a boolean if a field has been set.
func (o *V1SetProjectCredentialsResponse) HasGitlabUsername() bool {
	if o != nil && o.GitlabUsername != nil {
		return true
	}

	return false
}

// SetGitlabUsername gets a reference to the given string and assigns it to the GitlabUsername field.
func (o *V1SetProjectCredentialsResponse) SetGitlabUsername(v string) {
	o.GitlabUsername = &v
}

func (o V1SetProjectCredentialsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GitlabUsername != nil {
		toSerialize["gitlabUsername"] = o.GitlabUsername
	}
	return json.Marshal(toSerialize)
}

type NullableV1SetProjectCredentialsResponse struct {
	value *V1SetProjectCredentialsResponse
	isSet bool
}

func (v NullableV1SetProjectCredentialsResponse) Get() *V1SetProjectCredentialsResponse {
	return v.value
}

func (v *NullableV1SetProjectCredentialsResponse) Set(val *V1SetProjectCredentialsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SetProjectCredentialsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SetProjectCredentialsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SetProjectCredentialsResponse(val *V1SetProjectCredentialsResponse) *NullableV1SetProjectCredentialsResponse {
	return &NullableV1SetProjectCredentialsResponse{value: val, isSet: true}
}

func (v NullableV1SetProjectCredentialsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SetProjectCredentialsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * peridot/proto/v1/batch.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package peridotopenapi

import (
	"encoding/json"
)

// BuildServiceSubmitBuildBatchBody struct for BuildServiceSubmitBuildBatchBody
type BuildServiceSubmitBuildBatchBody struct {
	Builds *[]V1SubmitBuildRequest `json:"builds,omitempty"`
}

// NewBuildServiceSubmitBuildBatchBody instantiates a new BuildServiceSubmitBuildBatchBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildServiceSubmitBuildBatchBody() *BuildServiceSubmitBuildBatchBody {
	this := BuildServiceSubmitBuildBatchBody{}
	return &this
}

// NewBuildServiceSubmitBuildBatchBodyWithDefaults instantiates a new BuildServiceSubmitBuildBatchBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildServiceSubmitBuildBatchBodyWithDefaults() *BuildServiceSubmitBuildBatchBody {
	this := BuildServiceSubmitBuildBatchBody{}
	return &this
}

// GetBuilds returns the Builds field value if set, zero value otherwise.
func (o *BuildServiceSubmitBuildBatchBody) GetBuilds() []V1SubmitBuildRequest {
	if o == nil || o.Builds == nil {
		var ret []V1SubmitBuildRequest
		return ret
	}
	return *o.Builds
}

// GetBuildsOk returns a tuple with the Builds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildServiceSubmitBuildBatchBody) GetBuildsOk() (*[]V1SubmitBuildRequest, bool) {
	if o == nil || o.Builds == nil {
		return nil, false
	}
	return o.Builds, true
}

// HasBuilds returns a boolean if a field has been set.
func (o *BuildServiceSubmitBuildBatchBody) HasBuilds() bool {
	if o != nil && o.Builds != nil {
		return true
	}

	return false
}

// SetBuilds gets a reference to the given []V1SubmitBuildRequest and assigns it to the Builds field.
func (o *BuildServiceSubmitBuildBatchBody) SetBuilds(v []V1SubmitBuildRequest) {
	o.Builds = &v
}

func (o BuildServiceSubmitBuildBatchBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Builds != nil {
		toSerialize["builds"] = o.Builds
	}
	return json.Marshal(toSerialize)
}

type NullableBuildServiceSubmitBuildBatchBody struct {
	value *BuildServiceSubmitBuildBatchBody
	isSet bool
}

func (v NullableBuildServiceSubmitBuildBatchBody) Get() *BuildServiceSubmitBuildBatchBody {
	return v.value
}

func (v *NullableBuildServiceSubmitBuildBatchBody) Set(val *BuildServiceSubmitBuildBatchBody) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildServiceSubmitBuildBatchBody) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildServiceSubmitBuildBatchBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildServiceSubmitBuildBatchBody(val *BuildServiceSubmitBuildBatchBody) *NullableBuildServiceSubmitBuildBatchBody {
	return &NullableBuildServiceSubmitBuildBatchBody{value: val, isSet: true}
}

func (v NullableBuildServiceSubmitBuildBatchBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildServiceSubmitBuildBatchBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



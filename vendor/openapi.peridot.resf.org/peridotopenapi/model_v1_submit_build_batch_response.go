/*
 * peridot/proto/v1/batch.proto
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: version not set
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package peridotopenapi

import (
	"encoding/json"
)

// V1SubmitBuildBatchResponse struct for V1SubmitBuildBatchResponse
type V1SubmitBuildBatchResponse struct {
	BuildBatchId *string `json:"buildBatchId,omitempty"`
}

// NewV1SubmitBuildBatchResponse instantiates a new V1SubmitBuildBatchResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SubmitBuildBatchResponse() *V1SubmitBuildBatchResponse {
	this := V1SubmitBuildBatchResponse{}
	return &this
}

// NewV1SubmitBuildBatchResponseWithDefaults instantiates a new V1SubmitBuildBatchResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SubmitBuildBatchResponseWithDefaults() *V1SubmitBuildBatchResponse {
	this := V1SubmitBuildBatchResponse{}
	return &this
}

// GetBuildBatchId returns the BuildBatchId field value if set, zero value otherwise.
func (o *V1SubmitBuildBatchResponse) GetBuildBatchId() string {
	if o == nil || o.BuildBatchId == nil {
		var ret string
		return ret
	}
	return *o.BuildBatchId
}

// GetBuildBatchIdOk returns a tuple with the BuildBatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SubmitBuildBatchResponse) GetBuildBatchIdOk() (*string, bool) {
	if o == nil || o.BuildBatchId == nil {
		return nil, false
	}
	return o.BuildBatchId, true
}

// HasBuildBatchId returns a boolean if a field has been set.
func (o *V1SubmitBuildBatchResponse) HasBuildBatchId() bool {
	if o != nil && o.BuildBatchId != nil {
		return true
	}

	return false
}

// SetBuildBatchId gets a reference to the given string and assigns it to the BuildBatchId field.
func (o *V1SubmitBuildBatchResponse) SetBuildBatchId(v string) {
	o.BuildBatchId = &v
}

func (o V1SubmitBuildBatchResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BuildBatchId != nil {
		toSerialize["buildBatchId"] = o.BuildBatchId
	}
	return json.Marshal(toSerialize)
}

type NullableV1SubmitBuildBatchResponse struct {
	value *V1SubmitBuildBatchResponse
	isSet bool
}

func (v NullableV1SubmitBuildBatchResponse) Get() *V1SubmitBuildBatchResponse {
	return v.value
}

func (v *NullableV1SubmitBuildBatchResponse) Set(val *V1SubmitBuildBatchResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SubmitBuildBatchResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SubmitBuildBatchResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SubmitBuildBatchResponse(val *V1SubmitBuildBatchResponse) *NullableV1SubmitBuildBatchResponse {
	return &NullableV1SubmitBuildBatchResponse{value: val, isSet: true}
}

func (v NullableV1SubmitBuildBatchResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SubmitBuildBatchResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


